- hosts: localhost

  vars_files:
   - userNginx.yaml

  tasks:
  - name: "Creation des users en local"
    user:
     name: "{{ item }}"
     generate_ssh_key: yes
     state: present
    loop:
     "{{ user }}"


- hosts: ipssi

  vars:
    sites:
      - test1.local
      - test2.local

  vars_files:
   - userNginx.yaml

  tasks:
  - name: Ajout du group Nginxgp
    group:
     name: Nginxgp
     state: present

  - name: "Creation des users"
    user:
     name: "{{ item }}"
     group: Nginxgp
    loop:
     "{{ user }}"

  - name: creation du directory www
    file:
      path: /var/www/
      state: directory
      recurse: yes
      owner: Nginx
      group: Nginxgp
      mode: 0755

  - name: creation des directory html
    file:
      path: /var/www/{{ item }}/html
      state: directory
      owner: Nginx
      group: Nginxgp
      mode: 0755
    loop:
      "{{ sites }}"

  - name: install nginx
    yum:
      name: nginx
      state: present

  - name: copie html file 1
    template:
     src: "server.j2"
     dest: /var/www/{{ item }}/html/index.html
    loop:
       "{{ sites }}"

  - name: creation des r√©pertoire site
    file:
      path: /etc/nginx/{{ item }}
      state: directory
      owner: root
      group: Nginxgp
      mode: 0755
    loop:
      - sites-enabled
      - sites-available

  - name: "insertion ligne include dans nginx.conf"
    lineinfile:
      path: /etc/nginx/nginx.conf
      insertbefore: "^# Setting"
      line: "    include /etc/nginx/sites-enabled/*.conf;"

  - name: create server block file
    template:
     src: "serverconf.j2"
     dest: /etc/nginx/sites-available/{{ item }}.conf
    loop:
       "{{ sites }}"

  - name: Create a symbolic link
    file:
      src: /etc/nginx/sites-available/{{ item }}.conf
      dest: /etc/nginx/sites-enabled/{{ item }}.conf
      owner: root
      group: Nginxgp
      state: link
    loop:
      "{{ sites }}"

  - name: restart and enable systemd nginx service
    systemd:
      name: nginx
      enabled: yes
      state: restarted
    
  - name: Copie clef publique
    authorized_key:
     user: "{{ item }}"
     state: present
     key: "{{ lookup('file', '/home/{{ item }}/.ssh/id_rsa.pub') }}"
    loop:
     "{{ user }}"

  - name: Copie du fichier sudo
    template:
     src: "sudoers.j2"
     dest: "/etc/sudoers.d/{{ item }}"
    loop:
     "{{ user }}"

  - name: permit traffic in default zone for https service
    firewalld:
      service: http
      permanent: yes
      state: enabled

  - name: restart and enable systemd nginx service
    systemd:
      name: firewalld
      enabled: yes
      state: restarted
